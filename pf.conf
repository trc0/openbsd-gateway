################ OpenBSD pf.conf WIP ##########################
#

### Networks, Hosts and Ports ###
lan_if = "re1"
wan_if = "re0"
vpn_if = "tun0"
vpn_ip = "10.111.0.1"
ssh_port = "33011"
vpn_port = "22111"
all_networks = "0.0.0.0/0"
private_networks = "10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16"
home = "10.111.0.0/24, 172.16.0.0/24"

calamity = "172.16.0.22"
monstro =  "172.16.0.11"
ps4 =      "172.16.0.44"

badports_tcp = "{ 1:79, 81:442, 444:1934, 1936:3477, 3481:22110, 22112:27015, 27040:33010, 33012:49151 }"
badports_udp = "{ 1:66, 69:3477, 3480:4379, 4381:26999, 27040:49151 }"
bt_calamity = "27038"
bt_monstro = "27039"
ps4_tcp = "{ 80 443 1935 3478 3479 3480 }"
ps4_udp = "{ 3478 3479 }"
steam_tcp = "{ 27016:27036 }"
steam_udp = "{ 4380 27000:27036 }"
icmp_types = "{ echoreq, unreach }"

### Tables ###
table <badips>	persist file "/etc/badips.txt"
table <bruteforce> persist
table <internet> const { $all_networks, !self, !$private_networks }
table <home> const { $home }
table <myself> const { self }
table <martians> { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
                   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
                   192.168.0.0/16 198.18.0.0/15 198.51.100.0/24        \
                   203.0.113.0/24 }

set loginterface egress
set skip on lo
match in all scrub (no-df random-id max-mss 1440 reassemble tcp)
match out on egress from $ps4 to any nat-to ($wan_if:0) static-port
match out on egress inet from !(egress:network) to any nat-to (egress:0)

#pass quick on gif0

block drop in quick inet6

antispoof log quick for { egress $lan_if } label "antispoof"

block in log quick on egress from <martians> to any
block out log quick on egress from any to <martians>
block log all
block in log quick from <badips> label "badips"
block in log quick from <bruteforce>

pass out inet
pass in on $lan_if inet

### DNS redirect to unbound
block out log on egress proto { tcp udp } from any to any port domain
pass in log quick on $lan_if inet proto { tcp udp } from <home> to any port { domain 853 } rdr-to 127.0.0.1 port domain
pass out on $wan_if inet proto { tcp udp } from ($wan_if) to !($wan_if) port 853

pass in inet proto icmp icmp-type $icmp_types
#pass in inet6 proto icmp icmp-type $icmp_types

### Traffic tagging ###
match in on egress proto tcp from <internet> to port $badports_tcp      tag BAD_GUYS
match in on egress proto udp from <internet> to port $badports_udp      tag BAD_GUYS
match in on egress proto tcp to port $vpn_port                      	tag VPN_EGRESS_IN
match in on $vpn_if proto { icmp udp tcp }                          	tag VPN_TUN_IN
match out on egress tagged VPN_TUN_IN                                   tag VPN_FORWARD
match out on egress proto udp from <myself> to port ntp                 tag NTP_OUT
match in on egress from { no-route urpf-failed } to any                 tag BAD_PACKET
match out on egress from any to no-route                                tag BAD_PACKET
match in on egress proto tcp from <home> to port $ssh_port              tag SSH_IN

### SSH brute force
pass in log on $wan_if inet proto tcp from any to ($wan_if) port ssh \
 flags S/SA keep state \
 (max-src-conn 100, max-src-conn-rate 15/3600, \
 overload <bruteforce> flush global)

block log quick tagged BAD_PACKET
block log quick tagged BAD_GUYS

### VPN ###
match out tagged VPN_FORWARD nat-to (egress:0)
pass in log quick tagged VPN_EGRESS_IN
pass in log quick tagged VPN_TUN_IN
pass out log quick tagged VPN_FORWARD modulate state

### Port Forwarding ###
pass in log on egress inet proto { tcp udp } from any to (egress) port $bt_monstro rdr-to $monstro
pass in log on egress inet proto { tcp udp } from any to (egress) port $bt_calamity rdr-to $calamity
pass in log on egress inet proto tcp from any to (egress) port $steam_tcp rdr-to $calamity
pass in log on egress inet proto udp from any to (egress) port $steam_udp rdr-to $calamity

### PS4 ###
pass in log on egress inet proto tcp from any to (egress) port $ps4_tcp flags S/SA modulate state tag PS4 rdr-to $ps4
pass in log on egress inet proto udp from any to (egress) port $ps4_udp keep state tag PS4 rdr-to $ps4
pass out log on $lan_if inet proto tcp from any to $ps4 port $ps4_tcp flags S/SA modulate state received-on $wan_if tagged PS4
pass out log on $lan_if inet proto udp from any to $ps4 port $ps4_udp keep state received-on $wan_if tagged PS4
pass in log on $lan_if inet proto tcp from $ps4 to any port $ps4_tcp flags S/SA modulate state
pass in log on $lan_if inet proto udp from $ps4 to any port $ps4_udp keep state

### Don't log broadcasts
block in quick proto udp from 0.0.0.0 port bootpc to port bootps
block in quick proto udp from any port bootps to 255.255.255.255 port bootpc
